@using System.Security.Claims
@{
    // Lấy userId (ưu tiên NameIdentifier, fallback "sub")
    var userId = User.FindFirstValue(ClaimTypes.NameIdentifier)
                 ?? User.FindFirst("sub")?.Value
                 ?? string.Empty;

    // Lấy username để hiển thị
    var username = User.FindFirst("username")?.Value
                ?? User.FindFirst("name")?.Value
                ?? User.FindFirstValue(ClaimTypes.Name)
                ?? User.Identity?.Name
                ?? "User";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Task Manager</title>

    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link href="/css/custom.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/home1.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
    <link rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"
      integrity="sha512-..."
      crossorigin="anonymous" referrerpolicy="no-referrer" />



    <style>
        .navbar-custom {
            background: #fff;
            box-shadow: 0 2px 6px rgba(0,0,0,0.08);
            border-radius: 0 0 4px 4px;
        }

        .navbar-brand {
            font-weight: bold;
            font-size: 1.6rem;
            color: #0052cc !important;
            letter-spacing: 0.5px;
        }

        .nav-link {
            font-weight: 500;
            color: #42526e !important;
            transition: color 0.3s ease;
        }

            .nav-link:hover {
                color: #0052cc !important;
            }

        .login-btn {
            background-color: #0052cc;
            color: #fff !important;
            border: none;
            padding: 8px 16px;
            border-radius: 6px;
            font-weight: 600;
            text-decoration: none;
            font-size: 14px;
            margin-left: .5rem;
            transition: background-color 0.3s, transform 0.2s;
        }

            .login-btn:hover {
                background-color: #0747a6;
                transform: translateY(-2px);
                color: #fff !important;
            }

        .user-menu {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .user-greeting {
            font-weight: 500;
            color: #172b4d;
        }

        .account-menu {
            position: relative;
        }

        .account-icon {
            background: transparent;
            border: none;
            padding: 0;
            cursor: pointer;
            border-radius: 50%;
            width: 36px;
            height: 36px;
            overflow: hidden;
        }

        .account-avatar {
            width: 36px;
            height: 36px;
            border-radius: 50%;
        }

        .account-dropdown {
            position: absolute;
            top: 110%;
            right: 0;
            background: #fff;
            border: 1px solid #dfe1e6;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0,0,0,.1);
            display: none;
            flex-direction: column;
            min-width: 200px;
            z-index: 1000;
        }

            .account-dropdown a,
            .account-dropdown button {
                padding: 10px 16px;
                font-size: 14px;
                text-decoration: none;
                color: #172b4d;
                border-bottom: 1px solid #eee;
                background: none;
                text-align: left;
            }

                .account-dropdown a:hover,
                .account-dropdown button:hover {
                    background: #f4f5f7;
                    color: #0052cc;
                }

                .account-dropdown a:last-child,
                .account-dropdown button:last-child {
                    border-bottom: none;
                }

    </style>
    @RenderSection("Styles", required: false)
</head>


<body >
    <header>
        <nav class="navbar navbar-expand-sm navbar-light navbar-custom mb-3 ">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">Task Manager </a>

                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse"
                        aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item"><a class="nav-link" asp-controller="Home" asp-action="Index">Trang chủ</a></li>
                        <li class="nav-item"><a class="nav-link" asp-controller="projects" asp-action="Index">Dự án</a></li>
                        <li class="nav-item"><a class="nav-link" asp-controller="reports" asp-action="Portfolio">Tiến độ</a></li>
                        <li class="nav-item"><a class="nav-link" asp-controller="Dashboard" asp-action="Index">Dashboard</a></li>
                    </ul>


                    <div class="d-flex align-items-center">
                        @if (User.Identity?.IsAuthenticated == true)
                        {
                            <span class="me-2 text-dark">Xin chào, @username!</span>

                            <div class="account-menu">
                                <button class="account-icon" id="accountToggle" title="Quản lý tài khoản">
                                    <img src="https://ui-avatars.com/api/?name=@username&background=0D8ABC&color=FFF&rounded=true&size=40"
                                         alt="Avatar của @username"
                                         class="account-avatar" />
                                </button>
                                <div class="account-dropdown" id="accountDropdown">
                                    <a asp-controller="Account" asp-action="Profile">Thông tin tài khoản</a>
                                    <a asp-controller="Account" asp-action="ChangePassword">Đổi mật khẩu</a>

                                    <form asp-controller="Account" asp-action="Logout" method="post" class="m-0">
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="btn btn-link dropdown-item p-2 ps-3">Đăng xuất</button>
                                    </form>
                                </div>
                            </div>
                        }
                        else
                        {
                            <a class="login-btn" asp-controller="Account" asp-action="Login">Login</a>
                            <a class="login-btn" asp-controller="Account" asp-action="Register">Register</a>
                        }
                    </div>
                </div>
            </div>
        </nav>
    </header>
    <!--px-4 px-lg-5-->
    <div class="@(ViewBag.BodyClass == "page-wide"
                ? "container-fluid px-4 px-lg-5"
                : "container")">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">&copy; 2025 - MEoW</div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const toggle = document.getElementById("accountToggle");
            const dropdown = document.getElementById("accountDropdown");
            if (toggle && dropdown) {
                toggle.addEventListener("click", function () {
                    dropdown.style.display = dropdown.style.display === "flex" ? "none" : "flex";
                });
                document.addEventListener("click", function (e) {
                    if (!toggle.contains(e.target) && !dropdown.contains(e.target)) {
                        dropdown.style.display = "none";
                    }
                });
            }
        });
    </script>
    @await RenderSectionAsync("Scripts", required: false)


    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.0/signalr.min.js"></script>

    <script>
        const conn = new signalR.HubConnectionBuilder().withUrl("/hubs/chat").withAutomaticReconnect().build();

        conn.on("message", (msg) => { console.log("message:", msg); /* TODO: render UI */ });
        conn.on("presence", (p) => { console.log("presence:", p); });

        async function joinConversation(conversationId) { await conn.invoke("Join", conversationId); }
        async function leaveConversation(conversationId) { await conn.invoke("Leave", conversationId); }

        conn.start().catch(console.error);
    </script>
</body>
</html>
