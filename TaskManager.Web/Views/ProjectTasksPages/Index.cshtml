@using TaskManager.Tasks.Abstractions
@model IReadOnlyList<TaskDto>

@{
    ViewData["Title"] = "Công việc";
    var pid = (Guid)ViewBag.ProjectId;
    var actorId = (string)ViewBag.ActorId;
    // Lấy map từ Controller
    var nameMap = ViewBag.UsernameMap as IDictionary<string, string>
                  ?? new Dictionary<string, string>(StringComparer.Ordinal);
}



<div class="d-flex justify-content-between align-items-center mb-3">
    <h3 class="mb-0">Danh sách công việc</h3>
    <div class="d-flex gap-2">
        <a class="btn btn-primary btn-sm" asp-action="Create" asp-route-projectId="@pid">Thêm công việc</a>
        <a class="btn btn-outline-secondary btn-sm" asp-controller="Projects" asp-action="Details" asp-route-id="@pid">Quay lại dự án</a>
    </div>
</div>

@if (TempData["Toast"] is string ok && !string.IsNullOrWhiteSpace(ok))
{
    <div class="alert alert-success">@ok</div>
}
@if (TempData["Err"] is string err && !string.IsNullOrWhiteSpace(err))
{
    <div class="alert alert-danger">@err</div>
}

@if (!(Model?.Any() ?? false))
{
    <div class="alert alert-light">Chưa có công việc nào.</div>
}
else
{
    <table class="table table-hover align-middle">
        <thead><tr><th>Tiêu đề</th><th>Thời gian</th><th>Trạng thái</th><th>Assignees</th><th class="text-end">Thao tác</th></tr></thead>
        <tbody>
            @foreach (var t in Model)
            {
                <tr>
                    <td class="fw-semibold">
                        @t.Name
                        @if (!string.IsNullOrWhiteSpace(t.Description))
                        {
                            <div class="small text-muted">@t.Description</div>
                        }
                    </td>
                    <td class="small">@t.StartAt?.ToString("g") → @t.EndAt?.ToString("g")</td>
                    <td>
                        @if (t.Status == TaskManager.Tasks.Abstractions.TaskStatus.Complete)
                        {
                            <span class="badge bg-success">Hoàn thành</span>
                        }
                        else
                        {
                            <span class="badge bg-secondary">Chưa hoàn thành</span>
                        }
                    </td>
                    <td class="small">
                        @{
                            if (t.AssigneeUserIds?.Any() ?? false)
                            {
                                var names = t.AssigneeUserIds
                                .Select(id => nameMap.TryGetValue(id, out var n) ? n : id);
                                @string.Join(", ", names)
                            }
                            else
                            {
                                @("(chưa được gán)")
                            }
                        }
                    </td>

                    <td class="text-end">
                        <a class="btn btn-sm btn-outline-primary"
                           asp-action="Edit"
                           asp-route-projectId="@pid"
                           asp-route-taskId="@t.Id">
                            Sửa
                        </a>
                        <form asp-action="Delete"
                              asp-route-projectId="@pid"
                              asp-route-taskId="@t.Id"
                              method="post"
                              class="d-inline"
                              onsubmit="return confirm('Xóa công việc “@t.Name”?');">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-sm btn-outline-danger">Xóa</button>
                        </form>
                    </td>

                </tr>
            }
        </tbody>
    </table>
}
