@using TaskManager.Projects.Abstractions
@using System.Security.Claims
@model IEnumerable<ProjectDto>
@{
    Layout = null;
    ViewData["Title"] = "Bảng điều khiển";
    var userName = User?.Identity?.Name ?? "Khách";
    var fullName = User?.FindFirst("name")?.Value ?? userName;

    var userId = User.FindFirstValue(ClaimTypes.NameIdentifier)
    ?? User.FindFirst("sub")?.Value
    ?? string.Empty;

    var username = User.FindFirstValue("username")
    ?? User.FindFirstValue("name")
    ?? User.Identity?.Name
    ?? "User";
}
<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css"
          referrerpolicy="no-referrer" />

    <style>
        :root {
            --c-primary: #2563EB;
            /* xanh dương */
            --c-secondary: #9333EA;
            /* tím */
            --c-accent: #F59E0B;
            /* vàng cam */
            --c-success: #16A34A;
            /* xanh lá */
            --c-danger: #DC2626;
            /* đỏ */
            --c-muted: #6B7280;
            /* xám */
            --c-bg: #f3f6fb;
            --c-text: #1f2937;
            --c-border: #e5e7eb;
        }

        body {
            margin: 0;
            font-family: "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
            background: var(--c-bg);
            color: var(--c-text);
        }

        .app__header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 14px 28px;
            background: #fff;
            border-bottom: 1px solid var(--c-border);
            box-shadow: 0 2px 6px rgba(0, 0, 0, .05)
        }

        .logo {
            font-size: 22px;
            font-weight: 700;
            color: var(--c-primary)
        }

        .search {
            position: relative
        }

            .search input {
                border-radius: 8px;
                padding: 8px 36px 8px 12px;
                border: 1px solid #d1d5db;
                outline: none;
                width: 260px
            }

                .search input:focus {
                    border-color: var(--c-primary);
                    box-shadow: 0 0 0 3px rgba(37, 99, 235, .2)
                }

            .search .search-icon {
                position: absolute;
                right: 10px;
                top: 50%;
                transform: translateY(-50%);
                color: var(--c-muted)
            }

        .account-menu {
            position: relative
        }

        .account-avatar {
            width: 38px;
            height: 38px;
            border-radius: 50%;
            cursor: pointer;
            border: 2px solid var(--c-primary)
        }

        .account-dropdown {
            position: absolute;
            top: 120%;
            right: 0;
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 6px 18px rgba(0, 0, 0, .15);
            display: none;
            flex-direction: column;
            min-width: 220px;
            overflow: hidden
        }

            .account-dropdown a,
            .account-dropdown button {
                display: flex;
                align-items: center;
                gap: .5rem;
                padding: 10px 14px;
                text-align: left;
                border: none;
                background: none;
                font-size: 14px;
                color: #374151;
                border-bottom: 1px solid #f3f4f6;
                width: 100%;
                text-decoration: none;
                transition: background .2s, color .2s
            }

                .account-dropdown a:hover,
                .account-dropdown button:hover {
                    background: #f9fafb;
                    color: var(--c-primary)
                }

        .app__body {
            display: grid;
            grid-template-columns: 260px 1fr;
            gap: 24px;
            padding: 24px
        }

        .sidebar {
            background: #fff;
            border-radius: 12px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, .05);
            padding: 24px
        }

            .sidebar a {
                display: flex;
                align-items: center;
                gap: .65rem;
                margin-bottom: 16px;
                font-weight: 700;
                font-size: 18px;
                color: #374151;
                text-decoration: none;
                padding: 10px 12px;
                border-radius: 10px;
                transition: background .2s, color .2s, transform .15s
            }

                .sidebar a i {
                    transition: color .2s, transform .15s
                }

                .sidebar a:hover {
                    background: #f9fafb;
                    color: var(--c-primary);
                    transform: translateX(2px)
                }

        .banner {
            background: linear-gradient(135deg, var(--c-primary), var(--c-secondary));
            border-radius: 12px;
            padding: 28px;
            color: #fff;
            margin-bottom: 24px;
            box-shadow: 0 6px 16px rgba(0, 0, 0, .1);
            display: flex;
            justify-content: space-between;
            align-items: center
        }

            .banner h1 {
                margin: 0;
                font-size: 26px;
                font-weight: 700
            }

            .banner p {
                margin: 6px 0 0;
                font-size: 16px
            }

        .cards {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));
            gap: 20px
        }

        .card {
            border: none;
            border-radius: 12px;
            background: #fff;
            box-shadow: 0 2px 8px rgba(0, 0, 0, .05);
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            transition: transform .2s, box-shadow .2s, text-decoration .2s
        }

            .card:hover {
                transform: translateY(-3px);
                box-shadow: 0 6px 14px rgba(0, 0, 0, .08)
            }

        .card-body {
            padding: 20px;
            text-align: center;
            font-weight: 600;
            font-size: 16px;
            color: #111827;
            text-decoration: none !important;
        }

            .card-body small {
                display: block;
                margin-top: 6px;
                color: #6b7280;
                text-decoration: none !important;
            }

        .progress-rail {
            height: 12px;
            background: #e5e7eb;
            border-radius: 8px;
            margin: 0 16px 16px;
            position: relative;
            overflow: hidden
        }

        .progress-rail__bar {
            height: 100%;
            background: #22c55e;
            transition: width .3s ease
        }

        .progress-rail__label {
            position: absolute;
            inset: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 12px;
            font-weight: 700;
            color: #111827
        }

        .card--new {
            display: flex;
            align-items: center;
            justify-content: center;
            background: #f9fafb;
            font-weight: 600;
            color: #6b7280;
            gap: .5rem
        }

            .card--new:hover {
                background: #e5e7eb;
                color: #111827
            }

        .section-title {
            font-size: 20px;
            font-weight: 700;
            margin: 24px 0 16px;
            display: flex;
            align-items: center;
            gap: .5rem
        }

        .icon-home {
            color: var(--c-primary)
        }

        .icon-project {
            color: var(--c-accent)
        }

        .icon-report {
            color: var(--c-secondary)
        }

        .icon-account {
            color: var(--c-muted)
        }

        .icon-add {
            color: var(--c-success)
        }

        .icon-logout {
            color: var(--c-danger)
        }

        .icon-user {
            color: var(--c-primary)
        }

        .icon-key {
            color: var(--c-accent)
        }

        .icon-pin {
            color: var(--c-primary)
        }

        .icon-folder-open {
            color: var(--c-accent)
        }

        .sidebar a:hover .icon-home,
        .sidebar a:hover .icon-project,
        .sidebar a:hover .icon-report,
        .sidebar a:hover .icon-account {
            color: var(--c-primary);
        }

        .account-dropdown a:hover i,
        .account-dropdown button:hover i {
            color: var(--c-primary);
        }

        .sidebar a:hover i {
            transform: translateX(2px);
        }

        .cards a.card {
            text-decoration: none !important;
        }

            .cards a.card:hover {
                text-decoration: none !important;
            }
    </style>

    <link rel="stylesheet" href="~/css/dashboard.responsive.css" asp-append-version="true" />

</head>

<body>
    <header class="app__header">
        <!-- NÚT HAMBURGER (MOBILE <992px) Ở BÊN TRÁI -->
        <button id="menuToggle" class="hamburger d-inline-flex d-lg-none" aria-label="Mở menu" aria-controls="sidebar" aria-expanded="false">
            <i class="fa-solid fa-bars"></i>
        </button>

        <div class="logo">Task Manager</div>

        <div class="search">
            <input type="search" placeholder="Tìm kiếm..." aria-label="Tìm kiếm" />
            <i class="fa-solid fa-magnifying-glass search-icon" aria-hidden="true"></i>
        </div>

        <div class="account">
            @if (User.Identity?.IsAuthenticated == true)
            {
                <div class="account-menu">
                    <img src="https://ui-avatars.com/api/?name=@username&background=2563eb&color=fff&rounded=true&size=38"
                         alt="Avatar @username" class="account-avatar" id="accountToggle" />
                    <div class="account-dropdown" id="accountDropdown">
                        <a asp-controller="Account" asp-action="Profile">
                            <i class="fa-regular fa-user icon-user" aria-hidden="true"></i> Thông tin tài khoản
                        </a>
                        <a asp-controller="Account" asp-action="ChangePassword">
                            <i class="fa-solid fa-key icon-key" aria-hidden="true"></i> Đổi mật khẩu
                        </a>
                        <form asp-controller="Account" asp-action="Logout" method="post" class="m-0">
                            @Html.AntiForgeryToken()
                            <button type="submit">
                                <i class="fa-solid fa-right-from-bracket icon-logout" aria-hidden="true"></i> Đăng xuất
                            </button>
                        </form>
                    </div>
                </div>
            }
            else
            {
                <a asp-controller="Account" asp-action="Login" class="btn btn-light">Đăng nhập</a>
                <a asp-controller="Account" asp-action="Register" class="btn btn-primary">Đăng ký</a>
            }
        </div>
    </header>
    <!-- OVERLAY khi mở sidebar (chỉ hiện trên mobile) -->
    <div id="sidebarOverlay" class="sidebar-overlay d-lg-none"></div>

    <div class="app__body">
        <!-- Sidebar -->
        <aside class="sidebar" id="sidebar">
            <a asp-controller="Home" asp-action="Index">
                <i class="fa-solid fa-house icon-home" aria-hidden="true"></i>
                <span>Trang chủ</span>
            </a>
            <a asp-controller="Projects" asp-action="Index">
                <i class="fa-regular fa-folder icon-project" aria-hidden="true"></i>
                <span>Dự án</span>
            </a>
            <a asp-controller="Reports" asp-action="Portfolio">
                <i class="fa-solid fa-chart-pie icon-report" aria-hidden="true"></i>
                <span>Tiến độ</span>
            </a>
            <a asp-controller="Account" asp-action="Profile">
                <i class="fa-solid fa-gear icon-account" aria-hidden="true"></i>
                <span>Tài khoản</span>
            </a>
        </aside>

        <!-- Main -->
        <main class="main">
            <div class="banner">
                <div>
                    <h1>
                        Xin chào, @fullName
                    </h1>
                    <p id="today"></p>
                    <small class="d-block mt-2">Bạn có <b>@(Model?.Count() ?? 0) dự án</b> đang quản lý</small>
                </div>
                <img src="https://ui-avatars.com/api/?name=@fullName&background=9333ea&color=fff&rounded=true&size=72"
                     class="rounded-circle shadow" alt="Ảnh đại diện" />
            </div>

            <div class="section-title">
                <i class="fa-solid fa-thumbtack icon-pin" aria-hidden="true"></i>
                <span>Dự án của bạn</span>
            </div>

            <section class="cards">
                @if (Model != null && Model.Any())
                {
                    foreach (var p in Model)
                    {
                        <a class="card" href="/projects/@p.Id" data-project-id="@p.Id" aria-label="Xem dự án @p.Name">
                            <div class="card-body">
                                <i class="fa-regular fa-folder-open icon-folder-open" aria-hidden="true"></i> @p.Name
                                <small>Bắt đầu: @(p.StartDate?.ToString("dd/MM/yyyy") ?? "-")</small>
                            </div>
                            <div class="progress-rail" role="progressbar" aria-valuemin="0" aria-valuemax="100">
                                <div class="progress-rail__bar" style="width:0%"></div>
                                <span class="progress-rail__label">0%</span>
                            </div>
                        </a>
                    }
                }
                else
                {
                    <div class="card card--new">
                        <i class="fa-regular fa-circle-xmark" style="color:var(--c-muted)" aria-hidden="true"></i>
                        <span>Chưa có dự án</span>
                    </div>
                }

                <a class="card card--new" href="/projects/create">
                    <i class="fa-solid fa-circle-plus icon-add" aria-hidden="true"></i>
                    <span>Tạo dự án mới</span>
                </a>
            </section>
        </main>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.getElementById("today").textContent =
            new Date().toLocaleDateString("vi-VN", { weekday: "long", day: "numeric", month: "long" });

        const toggle = document.getElementById("accountToggle");
        const dropdown = document.getElementById("accountDropdown");
        if (toggle && dropdown) {
            toggle.addEventListener("click", () => {
                dropdown.style.display = dropdown.style.display === "flex" ? "none" : "flex";
            });
            document.addEventListener("click", (e) => {
                if (!toggle.contains(e.target) && !dropdown.contains(e.target)) dropdown.style.display = "none";
            });
        }

        // Tiến độ dự án
        (async function () {
            try {
                const res = await fetch('/api/reports/portfolio', { credentials: 'same-origin' });
                if (!res.ok) return;
                const data = await res.json();
                const map = new Map((data.items || []).map(i => [String(i.projectId).toLowerCase(), i]));
                document.querySelectorAll('.card[data-project-id]').forEach(card => {
                    const id = (card.getAttribute('data-project-id') || '').toLowerCase();
                    const itm = map.get(id);
                    if (!itm) return;
                    const completed = itm.completedCount | 0;
                    const pending = itm.pendingCount | 0;
                    const total = completed + pending;
                    const pct = total ? (completed * 100 / total) : 0;
                    const bar = card.querySelector('.progress-rail__bar');
                    const label = card.querySelector('.progress-rail__label');
                    if (bar) bar.style.width = pct.toFixed(2) + '%';
                    if (label) {
                        label.textContent = pct.toFixed(0) + '%';
                        label.style.color = (pct >= 55) ? '#fff' : '#111827';
                    }
                    if (bar) {
                        bar.style.background = pct >= 80 ? '#16a34a'
                            : pct >= 40 ? '#22c55e'
                                : '#f97316';
                    }
                });
            } catch (e) { console.warn(e); }
        })();
    </script>

    <script>
        (function () {
            const btn = document.getElementById('menuToggle');
            const sidebar = document.getElementById('sidebar');
            const overlay = document.getElementById('sidebarOverlay');

            if (!btn || !sidebar || !overlay) return;

            const openMenu = () => {
                sidebar.classList.add('is-open');
                overlay.classList.add('is-visible');
                document.body.classList.add('noscroll');
                btn.setAttribute('aria-expanded', 'true');
            };
            const closeMenu = () => {
                sidebar.classList.remove('is-open');
                overlay.classList.remove('is-visible');
                document.body.classList.remove('noscroll');
                btn.setAttribute('aria-expanded', 'false');
            };

            btn.addEventListener('click', (e) => {
                e.stopPropagation();
                sidebar.classList.contains('is-open') ? closeMenu() : openMenu();
            });
            overlay.addEventListener('click', closeMenu);
            document.addEventListener('keydown', (e) => { if (e.key === 'Escape') closeMenu(); });
        })();
    </script>

</body>

</html>